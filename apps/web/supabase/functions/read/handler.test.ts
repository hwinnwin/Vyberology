import { describe, expect, it } from "vitest"; // added by Lumen (Stage 4A PR1-DI)
import { prepareReadResult } from "./handler.ts"; // added by Lumen (Stage 4A PR1-DI)

describe("prepareReadResult", () => { // added by Lumen (Stage 4A PR1-DI)
  it("returns BAD_REQUEST when payload missing fields", () => { // added by Lumen (Stage 4A PR1-DI)
    const result = prepareReadResult({ fullName: "", dob: "2020-01-01" }); // added by Lumen (Stage 4A PR1-DI)
    expect(result.ok).toBe(false); // added by Lumen (Stage 4A PR1-DI)
    if (!result.ok) { // added by Lumen (Stage 4A PR1-DI)
      expect(result.error.code).toBe("BAD_REQUEST"); // added by Lumen (Stage 4A PR1-DI)
    } // added by Lumen (Stage 4A PR1-DI)
  }); // added by Lumen (Stage 4A PR1-DI)

  it("produces reading summary for valid input", () => { // added by Lumen (Stage 4A PR1-DI)
    const result = prepareReadResult({ fullName: "jane doe", dob: "2000-01-01" }); // added by Lumen (Stage 4A PR1-DI)
    expect(result.ok).toBe(true); // added by Lumen (Stage 4A PR1-DI)
    if (result.ok) { // added by Lumen (Stage 4A PR1-DI)
      expect(result.value.input.fullName).toBe("Jane Doe"); // added by Lumen (Stage 4A PR1-DI)
      expect(result.value.reading.frequencyProfile).toContain("Life Path"); // added by Lumen (Stage 4A PR1-DI)
      expect(result.value.reading.detailedSummary).toContain("CORE NUMBERS"); // added by Lumen (Stage 4A PR1-DI)
    } // added by Lumen (Stage 4A PR1-DI)
  }); // added by Lumen (Stage 4A PR1-DI)
}); // added by Lumen (Stage 4A PR1-DI)
